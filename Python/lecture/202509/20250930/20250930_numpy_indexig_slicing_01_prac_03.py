# 실습2. 인덱싱과 슬라이싱(3)
# 8. 5x3 배열에서 각 행의 첫 번째 값이 50 이상인 행만 Boolean Indexing으로 선택하세요.
# • arr = np.array([[10, 20, 30], [55, 65, 75], [40, 45, 50], [70, 80, 90], [15, 25, 35]])
# 9. 4x4 배열에서 (0,1), (1,3), (2,0), (3,2) 위치의 요소를 한 번에 선택하세요.
# • arr = np.arange(1, 17).reshape(4, 4)
# 10. 3차원 배열 (2, 3, 4)에서 모든 블록에서 두 번째 열만 추출해 새로운 2차원 배열 (2, 3)을 만
# 드세요.
# • arr3d = np.arange(24).reshape(2, 3, 4)

import numpy as np

arr = np.array([[10, 20, 30], [55, 65, 75], [
               40, 45, 50], [70, 80, 90], [15, 25, 35]])
print('원본배열\n', arr)
print('8. 5x3 배열에서 각 행의 첫 번째 값이 50 이상인 행만 Boolean Indexing으로 선택하세요.\n')
print(arr[arr[:, 0] >= 50])

arr = arr = np.arange(1, 17).reshape(4, 4)
print('원본배열\n', arr)
print('9. 4x4 배열에서 (0,1), (1,3), (2,0), (3,2) 위치의 요소를 한 번에 선택하세요.\n')
print(arr[[0, 1, 2, 3], [1, 3, 0, 2]])

arr3d = np.arange(24).reshape(2, 3, 4)
print('원본배열\n', arr3d)
print('10. 3차원 배열 (2, 3, 4)에서 모든 블록에서 두 번째 열만 추출해 새로운 2차원 배열 (2, 3)을 만드세요.\n')
print(arr3d[:, :, 1].reshape(2, 3))
'''
    [
        [
            [1, 2, 3, 4],
            [5, 6, 7, 8],
            [9, 10, 11, 12]
        ],
        [
            [13, 14, 15, 16],
            [17, 18, 19, 20],
            [21, 22, 23, 24]
        ]
    ]
'''
